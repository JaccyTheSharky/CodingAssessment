import turtle
import random
import math
import time

x = 1

wn = turtle.Screen()
wn.bgcolor("green")
wn.title("Meme Hunter")
wn.bgpic("C:/Users/dsouc/Desktop/ayy.png")
#Images

jamessprite = ("James.gif")
meme1 = ("findyou.gif")
meme2 = ("question mark.gif")
meme3 = ("Trump.gif")
meme4 = ("vlad.gif")
meme5 = ("wonka.gif")
meme6 = ("youtellingme.gif")
newell = ("gaben.gif")

wn.addshape(jamessprite)
wn.addshape(meme1)
wn.addshape(meme2)
wn.addshape(meme3)
wn.addshape(meme4)
wn.addshape(meme5)
wn.addshape(meme6)
wn.addshape(newell)

class Sprite(turtle.Turtle):
    def __init__(self):
        turtle.Turtle.__init__(self)
        self.hideturtle()
        self.penup()
        self.speed(1)
class Story(turtle.Turtle):
    def __init__(self):
        turtle.Turtle.__init__(self)
        self.hideturtle()
        self.penup()
        self.speed(0)
        self.color("black")
class Game(turtle.Turtle):

    def __init__(self):
        turtle.Turtle.__init__(self)
        self.penup()
        self.hideturtle()
        self.speed(0)
        self.color("white")
        self.goto(-400, 310)
        self.score = 0

    def update_score(self):
        self.clear()
        self.write("Score: {}".format(self.score), False, align="left", font=("Arial",14, "normal"))

    def change_score(self, points):
        self.score += points
        self.update_score()
        if self.score >= 10:
            self.goto(-30, 0)
            self.color("black")
            self.write("You win", move=False, align="left", font=("Arial", 20, "normal"))


class Border(turtle.Turtle):

    def __init__(self):
        turtle.Turtle.__init__(self)
        self.penup()
        self.hideturtle()
        self.speed(0)
        self.color("black")
        self.pensize(5)

    def draw_border(self):
        self.penup()
        self.goto(-600, -600)
        self.pendown()
        self.goto(-600, 600)
        self.goto(600, 600)
        self.goto(600, -600)
        self.goto(-600, -600)

class James(turtle.Turtle):

    def __init__(self):
        turtle.Turtle.__init__(self)
        self.penup()
        self.speed(0)
        self.shape(jamessprite)
        self.color("red")
        self.speed = 1

    def move(self):
        self.forward(self.speed)

        #Border Checking
        if self.xcor() > 490 or self.xcor() < -490:
            self.left(60)
        if self.ycor() > 440 or self.ycor() < -440:
            self.left(60)

    def turnleft(self):
        self.left(30)

    def turnright(self):
        self.right(30)

    def increasespeed(self):
        self.speed += 0.5

    def decreasespeed(self):
        self.speed -= 0.5
class Meme(turtle.Turtle):

    def __init__(self):
        turtle.Turtle.__init__(self)
        self.penup()
        self.speed(0)
        self.color("purple")
        if whichmeme == 1:
            self.shape(meme1)
        elif whichmeme == 2:
            self.shape(meme2)
        elif whichmeme == 3:
            self.shape(meme3)
        elif whichmeme == 4:
            self.shape(meme4)
        elif whichmeme == 5:
            self.shape(meme5)
        else:
            self.shape(meme6)
        self.speed = 0.5
        self.goto(random.randint(-250, 250), random.randint(-250, 250))
        self.setheading(random.randint(0,360))

    def jump(self):
        self.goto(random.randint(-250, 250), random.randint(-250, 250))
        self.setheading(random.randint(0,360))

    def move(self):
        self.forward(self.speed)

        #Border Checking
        if self.xcor() > 590 or self.xcor() < -690:
            self.left(60)
        if self.ycor() > 390 or self.ycor() < -390:
            self.left(60)

#Collision checking function
#Uses the Pythagorean Theorem to Measure The Distance Between Two Objects
def isCollision(t1, t2):
    a = t1.xcor()-t2.xcor()
    b = t1.ycor()-t2.ycor()
    distance = math.sqrt((a ** 2) + (b ** 2))

    if distance < 20:
        return True
    else:
        return False

#Create class instances
james = James()
border = Border()
story = Story()
gaben = Sprite()
game = Game()

#various
gaben.shape(newell)
gaben.hideturtle()

#Narration
story.goto(-400, 350)
story.write("Our young child is has fallen into the memeland", move=False, align="left", font=("Arial", 20, "normal"))
time.sleep(1)
story.goto(-400, 300)
story.write("Do not worry, he is alive", move=True, align="left", font=("Arial", 20, "normal"))
time.sleep(1)
story.goto(-400, 250)
story.write("Wait, who is this approaching him?", move = False, align="left", font=("Arial", 20, "normal"))
time.sleep(1)
gaben.goto(0, 350)
gaben.showturtle()
gaben.right(90)
while x <= 40:
    gaben.forward(5)
    x = x + 1
story.color("green")
story.goto(-400, 350)
story.write("Our young child is has fallen into the memeland", move=False, align="left", font=("Arial", 20, "normal"))
story.goto(-400, 300)
story.write("Do not worry, he is alive", move=True, align="left", font=("Arial", 20, "normal"))
story.goto(-400, 250)
story.write("Wait, who is this approaching him?", move = False, align="left", font=("Arial", 20, "normal"))

story.goto(0, 350)
story.color("red")
story.write("Hello, it is I: Lord Gaben", move=False, align="left", font=("Arial", 20, "normal"))
time.sleep(1)
story.goto(0, 300)
story.write("I come to you in troubling times", move=False, align="left", font=("Arial", 20, "normal"))
time.sleep(1)
story.goto(0, 250)
story.write("Usually the memes live in harmony", move=False, align="left", font=("Arial", 20, "normal"))
time.sleep(1)
story.goto(0, 200)
story.write("But now there are 10 rogue memes", move=False, align="left", font=("Arial", 20, "normal"))
time.sleep(1)
story.goto(0, 150)
story.write("I need you to capture them all!", move=False, align="left", font=("Arial", 20, "normal"))
time.sleep(1)
story.goto(0, 100)
story.write("GO NOW, CATCH EM' ALL!", move=False, align="left", font=("Arial", 20, "normal"))

story.goto(0, 350)
story.color("green")
story.write("Hello, it is I: Lord Gaben", move=False, align="left", font=("Arial", 20, "normal"))
story.goto(0, 300)
story.write("I come to you in troubling times", move=False, align="left", font=("Arial", 20, "normal"))
story.goto(0, 250)
story.write("Usually the memes live in harmony", move=False, align="left", font=("Arial", 20, "normal"))
story.goto(0, 200)
story.write("But now there are many rogue memes", move=False, align="left", font=("Arial", 20, "normal"))
story.goto(0, 150)
story.write("I need you to capture them all!", move=False, align="left", font=("Arial", 20, "normal"))
story.goto(0, 100)
story.write("GO NOW, CATCH EM' ALL!", move=False, align="left", font=("Arial", 20, "normal"))

story.goto(0, 150)
story.color("yellow")
story.write("I need you to c", move = False, align="left", font=("Arial", 20, "normal"))
story.goto(0, 100)
story.write("GO NOW, CATCH", move = False, align="left", font=("Arial", 20, "normal"))


gaben.hideturtle()
#Draw the border
border.draw_border()

#Create multiple goals
memes = []
for count in range(6):
    whichmeme = random.randint(1, 6)
    memes.append(Meme())

#Set keyboard bindings
turtle.listen()
turtle.onkey(james.turnleft, "Left")
turtle.onkey(james.turnright, "Right")
turtle.onkey(james.increasespeed, "Up")
turtle.onkey(james.decreasespeed, "Down")

#Speed Up The Game
wn.tracer(0)

#Main Loop
while True:
    wn.update()
    james.move()

    for meme in memes:
        meme.move()

        #Check for a collision between the player and goal
        if isCollision(james, meme):
            meme.jump()
            game.change_score(1)

